<?php

use Illuminate\Support\Facades\Config;
use Illuminate\Support\Facades\Schema;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Database\Migrations\Migration;

class CreateUserTable extends Migration
{
    /**
     * @var string
     */
    protected $usersTable;

    /**
     * @var string
     */
    protected $userSocialNetworksTable;

    /**
     * @var string
     */
    protected $userSocialLoginsTable;

    /**
     * @var string
     */
    protected $passwordResetsTable;

    /**
     * CreateUserTable constructor.
     */
    public function __construct()
    {
        $this->usersTable = Config::get('user.users_table');
        $this->passwordResetsTable = Config::get('user.password_resets_table');
        $this->userSocialNetworksTable = Config::get('user.social_networks_table');
        $this->userSocialLoginsTable = Config::get('user.social_logins_table');
    }

    /**
     * Run the migrations.
     *
     * @return void
     */
    public function up()
    {
        // Create table for storing user
        Schema::create($this->usersTable, function (Blueprint $table) {
            $table->increments('id');
            $table->string('email', 128)->unique();
            $table->string('password');
            $table->string('firstname', 32)->nullable();
            $table->string('lastname', 32)->nullable();
            $table->string('phone', 11)->nullable();
            $table->string('avatar')->nullable();
            $table->boolean('is_active')->default(true);
            $table->string('reg_ip', 45)->nullable();
            $table->timestamp('log_date')->nullable();
            $table->string('log_ip', 45)->nullable();
            $table->unsignedInteger('log_num')->default(0);
            $table->rememberToken();
            $table->timestamps();
        });

        // Create table for storing user password resets
        Schema::create($this->passwordResetsTable, function (Blueprint $table) {
            $table->increments('id');
            $table->string('email')->index();
            $table->string('token')->index();
            $table->timestamp('created_at')->nullable();
        });

        Schema::create($this->userSocialNetworksTable, function (Blueprint $table) {
            $table->increments('id');
            $table->unsignedInteger('user_id');
            $table->string('facebook')->nullable();
            $table->string('twitter')->nullable();
            $table->string('google_plus')->nullable();
            $table->string('linked_in')->nullable();
            $table->string('dribbble')->nullable();
            $table->string('skype')->nullable();
        });

        Schema::create($this->userSocialLoginsTable, function (Blueprint $table) {
            $table->increments('id');
            $table->unsignedInteger('user_id');
            $table->string('provider', 50);
            $table->string('provider_id');
            $table->string('avatar');
            $table->timestamp('created_at');
        });
    }

    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down()
    {
        Schema::dropIfExists($this->usersTable);
        Schema::dropIfExists($this->passwordResetsTable);
        Schema::dropIfExists($this->userSocialNetworksTable);
        Schema::dropIfExists($this->userSocialLoginsTable);
    }
}